{"version":3,"file":"static/js/514.e2f0be6b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contacts/Contacts.module.css?5eb7","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/contacts/Contacts.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/formaContacts/FormaContacts.module.css?b4e7","components/formaContacts/FormaContacts.jsx","webpack://react-homework-template/./src/components/section/Section.module.css?cc42","components/section/Section.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listContacts\":\"Contacts_listContacts__vlMG8\",\"listItemContacts\":\"Contacts_listItemContacts__qFPgh\",\"buttonDeleteContacts\":\"Contacts_buttonDeleteContacts__-0jux\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectLoading = state => state.contacts.contacts.isLoading;\n\nexport const getFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toUpperCase().includes(filter.toUpperCase().trim())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport styles from './Contacts.module.css';\n\nimport { deleteContact } from 'redux/contacts/contactsThunk';\n\nimport { getFilterContacts } from 'redux/contacts/selectors';\n\nconst ContactsListItem = ({ name, number, onDelete }) => {\n  return (\n    <li className={styles.listItemContacts}>\n      <p>{name} -</p>\n      <span>tel: {number}</span>\n      <button className={styles.buttonDeleteContacts} onClick={onDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getFilterContacts);\n\n  return (\n    <>\n      <ul className={styles.listContacts}>\n        {contacts.map(contact => {\n          return (\n            <ContactsListItem\n              key={contact.id}\n              name={contact.name}\n              number={contact.number}\n              onDelete={() => dispatch(deleteContact(contact.id))}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"divFilter\":\"Filter_divFilter__KXzMg\",\"inputFilter\":\"Filter_inputFilter__bTq6I\"};","import styles from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const hendleChangeFilter = event => {\n    const { value } = event.target;\n    dispatch(filterContacts(value));\n  };\n  return (\n    <div className={styles.divFilter}>\n      <h4>Find contacts by name</h4>\n      <input\n        className={styles.inputFilter}\n        onChange={hendleChangeFilter}\n        value={filter}\n        type=\"text\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formDivContainer\":\"FormaContacts_formDivContainer__V3iiW\",\"form\":\"FormaContacts_form__5cgYA\",\"label\":\"FormaContacts_label__UhXZa\",\"buttonForm\":\"FormaContacts_buttonForm__M8PPM\",\"inputformDivContainer\":\"FormaContacts_inputformDivContainer__KjdCg\"};","import { useDispatch, useSelector } from 'react-redux';\nimport styles from './FormaContacts.module.css';\nimport { addContact } from 'redux/contacts/contactsThunk';\n// import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const FormaContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n\n    if (name.trim() === '') {\n      alert('Name cannot be empty');\n      return;\n    }\n\n    if (\n      contacts.some(\n        contact => contact.name === name || contact.number === number\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n\n      setName('');\n\n      setNumber('');\n      return;\n    }\n\n    const newContact = {\n      // id: nanoid(),\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContact(newContact));\n\n    setName('');\n\n    setNumber('');\n  };\n  return (\n    <>\n      <form className={styles.form} onSubmit={hendleSubmit} action=\"\">\n        <div className={styles.formDivContainer}>\n          <label className={styles.label} htmlFor=\"\">\n            Name\n          </label>\n          <input\n            className={styles.inputformDivContainer}\n            value={name}\n            name=\"name\"\n            onChange={handleChange}\n            type=\"text\"\n            required\n          />\n        </div>\n\n        <div className={styles.formDivContainer}>\n          <label className={styles.label} htmlFor=\"\">\n            Number\n          </label>\n          <input\n            className={styles.inputformDivContainer}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button className={styles.buttonForm} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionTitle\":\"Section_sectionTitle__V-Xfr\"};","import styles from './Section.module.css';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={styles.sectionTitle}>{title}</h2>\n      <>{children}</>\n    </>\n  );\n};\n","import { Contacts } from 'components/contacts/Contacts';\nimport { Filter } from 'components/filter/Filter';\nimport { FormaContacts } from 'components/formaContacts/FormaContacts';\nimport { Section } from 'components/section/Section';\nimport React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsThunk';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <Section title={'Phonebook'}>\n        <FormaContacts />\n      </Section>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Section title={'Contacts'}>\n        <Filter />\n        <Contacts />\n      </Section>\n    </>\n  );\n};\n\nexport default Contact;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectLoading","isLoading","getFilterContacts","toUpperCase","includes","trim","ContactsListItem","number","onDelete","className","styles","onClick","Contacts","dispatch","useDispatch","useSelector","contact","deleteContact","id","Filter","onChange","event","target","filterContacts","type","FormaContacts","useState","setName","setNumber","handleChange","onSubmit","preventDefault","some","alert","newContact","addContact","action","htmlFor","required","Section","title","children","useEffect","fetchContacts","Helmet"],"sourceRoot":""}